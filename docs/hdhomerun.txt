cmd = [hdhomerun_config, device_id, "set"]
        cmd.extend(["/tuner%s/program" % tuner_num, self.subchannel])
        subprocess.Popen(cmd).wait()


# web based discovery
http://ipv4-my.hdhomerun.com/discover


# posible interesting method for recording
response = requests.get(url, stream=True, timeout=3.00)
response.raise_for_status()
with open(options.output_file, 'wb') as fd:
	for chunk in response.iter_content(1 * 1024 * 1024):
	    if done:
		break
	    fd.write(chunk)
response.close()


# set the tuner channel
hdhomerun_config $DEVICE set /tuner$TUNER/channel auto:$CHANNEL

# set the program id
hdhomerun_config $DEVICE set /tuner$TUNER/program $PROGRAM

# tell it to send the video stream our way
hdhomerun_config $DEVICE set /tuner$TUNER/target rtp://$MY_IP:$RTP_PORT




# to web
p=subprocess.Popen(["ffmpeg","-i","http://"+host+":5004/auto/v"+channelComp,"-vcodec","libx264","-preset","veryfast","-acodec"]+acodecs+["-vf","yadif=0:0:0","out.m3u8"],stdout=logfile,stderr=logfile)


hdhomerun_config discover

10.0.0.45

# set channel map for tuner0 and 1
./hdhomerun_config 1015E13C set /tuner0/channelmap us-bcast
./hdhomerun_config 1015E13C set /tuner1/channelmap us-bcast







# Discover device name
device=$(hdhomerun_config discover |awk '{print $3}')

# Scan channels directly into while loop - pull relevant data and create strm file
hdhomerun_config $device scan 1 | grep -vEi 'tsid|lock|none' | while read output
	do
		if [[ "$output" == "SCANNING"* ]]; then
			scan=$(echo $output | awk '{print $2}')
		fi
		if [[ "$output" == "PROGRAM"* ]]; then
			prog=$(echo $output | awk '{print $2}')
			file=$(echo $output | cut -d':' -f2)
			# Create .strm file
			echo hdhomerun://$device-1/tuner1$file\?channel\=auto\:$scan\&program\=${prog/:/} > ~/Videos/Live\ TV/"${file/\ /}".strm		
		fi
	done
exit 0




