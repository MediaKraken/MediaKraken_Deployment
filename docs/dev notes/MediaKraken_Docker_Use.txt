Prerequisites:
docker 1.12.3
docker-compose


# Start up the MediaKraken application suite:
docker-compose up -d


# Stop the MediaKraken application suite. This will also remove the containers
docker-compose down


# show console output (good for crashes)
docker-compose logs


*************************************************

10.0.0.111 - ubuntu mirror
10.0.0.160 - alpine mirror - http://10.0.0.160/alpine/v3.4/main/x86_64/
10.0.0.113 - pip mirror (not done)


show ips
docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)


testing

docker run --network=mk_mediakraken_network --env POSTGRES_PASSWORD=jf22j --env POSTGRES_DB=metamandb --env POSTGRES_USER=metamanpg -it mediakraken/mkmetadata /bin/ash

docker run --env POSTGRES_PASSWORD=jf22j --env POSTGRES_DB=metamandb --env POSTGRES_USER=metamanpg -itd --name=alpine_fdsfs5550 mediakraken/mkdownload /bin/ash


docker run --env POSTGRES_PASSWORD=jf22j --env POSTGRES_DB=metamandb --env POSTGRES_USER=metamanpg -itd --name=alpine_fdsfs5550 mediakraken/mkdatabase /bin/ash

# after attach
su postgres
psql -d metamandb -c "create extension pg_trgm;"




docker build -t mediakraken/mkdatabaseupgrade .


docker build -t mediakraken/ansible_runner_service .

docker run -it centos:7 /bin/bash

docker run -it mediakraken/ansible_runner_service /bin/bash



docker exec -it [container-id] /bin/ash

docker run -it --rm mediakraken/mkgrapesjs /bin/ash


docker build -t mediakraken/mkbasenvidia .

docker build -t mediakraken/mkslave .

docker build -t mediakraken/mkstreamvod .


docker build -t mediakraken/mkbaseffmpeg .


docker run --network=mk_mediakraken_network -p 5050 -v /var/run/docker.sock:/var/run/docker.sock -v /var/log/mediakraken:/mediakraken/log -v /home/mediakraken:/mediakraken/mnt -itd --name=alpifs7 mediakraken/mkslave


docker run --network=mk_mediakraken_dbnetwork -itd --name=alpine_appserver7 alpine_appserver
docker run --network=mk_mediakraken_dbnetwork --env POSTGRES_PASSWORD=jf20CHANGEME49jf42j -itd --name=alpine_appserv4534450 mkserver


docker run -it --rm \
     --net host \
     -v "$PWD":/stream \
     -w /stream \
     mediakraken/mkslave --help

# works
docker run -it --rm --net host mediakraken/mkslave castnow --help

# works
docker run -it --rm --net host mediakraken/mkslave castnow --address 10.0.0.220 http://commondatastorage.googleapis.com/gtv-videos-bucket/ED_1280.mp4

# thinks then load fail
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --address 10.0.0.220 \
'/mediakraken/mnt/Movie_Misc/Sleepaway Camp II Unhappy Campers (1988)/Sleepaway Camp II Unhappy Campers (1988).mp4'

# works
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec aac --ffmpeg-movflags frag_keyframe+empty_moov+faststart --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/Movie_Misc/Vendetta (2013).mkv'


Reykjavik Whale Watching Massacre (2009)


# idle
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec aac --ffmpeg-movflags frag_keyframe+empty_moov+faststart --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/BluRay/The Zombie Diaries 2 (2011)/The Zombie Diaries 2 (2011).mkv'

# lost connection
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec aac --ffmpeg-movflags frag_keyframe+empty_moov+faststart --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/BluRay/Mirrors 2 (2010)/Mirrors 2 (2010).mkv'

# worked
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec aac --ffmpeg-movflags frag_keyframe+empty_moov+faststart --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/DVD/Snakes On A Train (2006)/Snakes On A Train (2006).mkv'



docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec aac --ffmpeg-movflags frag_keyframe+empty_moov+faststart --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/DVD/Alien Prey (1978)/Alien Prey (1978).mkv'


docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow  --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/Movie_Misc/Touch of Death (1988).mp4'



# no audio
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec copy --ffmpeg-vcodec copy --ffmpeg-movflags frag_keyframe+empty_moov+faststart \
--address 10.0.0.220 --myip 10.0.0.198 '/mediakraken/mnt/BluRay/Mirrors 2 (2010)/Mirrors 2 (2010).mkv'

# works...and passthrough
docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec ac3 --ffmpeg-vcodec copy --ffmpeg-movflags frag_keyframe+empty_moov+faststart \
--address 10.0.0.220 --myip 10.0.0.198 '/mediakraken/mnt/BluRay/Mirrors 2 (2010)/Mirrors 2 (2010).mkv'



docker run --network=mk_mediakraken_dbnetwork -env POSTGRES_HOST=mk_database --env=POSTGRES_DB=metamandb --env=POSTGRES_USER=metamanpg --env POSTGRES_PASSWORD=jf20CHANGEME49jf42j -itd --name=alpine_apps450 mk_appserver


docker run --network=mk_mediakraken_dbnetwork --env POSTGRES_PASSWORD=jf20CHANGEME49jf42j -itd --name=alpine_metadata3323 alpine_metadata


docker run --network=mk_mediakraken-dbnetwork -p 8900:8080 --env POSTGRES_PASSWORD=jf20CHANGEME49jf42j --env POSTGRES_DB=metamandb --env POSTGRES_USER=metamanpg -itd --name=alpine_web5550 alpine_webserver
# after attach
uwsgi --socket 0.0.0.0:8080 --protocol http --chdir=./web_app --ini ./web_app/mediakraken_uwsgi_alpine.ini




docker run --network=alpine_mediakraken-dbnetwork --env POSTGRES_HOST=10.0.0.194 --env POSTGRES_PASSWORD=jf20CHANGEME49jf42j -itd --name=alpinemetadata665 alpine_metadata



docker run -v /var/opt/mediakraken/images:/mediakraken/web_app/MediaKraken/static/meta/images -v /var/log/mediakraken:/mediakraken/log --network=alpine_mediakraken-dbnetwork --env POSTGRES_HOST=10.0.0.194 --env=POSTGRES_DB=metamandb --env=POSTGRES_USER=metamanpg --env POSTGRES_PASSWORD=jf20CHANGEME49jf42j -itd --name=alpinemetadata795876 alpine_metadata


# do fresh/force rebuild
docker-compose build --no-cache webapp


docker run --net=host -itd --name=alpine_devicescan449 alpine_devicescan


docker run --network=alpine_mediakraken-dbnetwork -p 12345:80 -itd --name=alpine_phppgadmin494 alpine_phppgadmin


docker run -t -i alpine:latest /bin/ash


docker run -it --rm --net host -v /mediakraken/nfsmount:/mediakraken/mnt mediakraken/mkslave castnow --tomp4 --ffmpeg-acodec aac --ffmpeg-movflags frag_keyframe+empty_moov+faststart --address 10.0.0.220 \
--myip 10.0.0.198 '/mediakraken/mnt/DVD_3D/The Zombie Chronicles (2001)/The Zombie Chronicles (2001).mkv'

/mediakraken/mnt/DVD_3D/The Zombie Chronicles (2001)/The Zombie Chronicles (2001).mkv

# can ping mkdatabase then......

# rename
docker tag server:latest myname/server:latest

docker push [OPTIONS] NAME[:TAG]


docker tag alpine_database:latest mediakraken/mkdatabase:latest
docker push mediakraken/mkdatabase:latest

docker push mediakraken/mkbaseffmpeg:latest


docker tag alpine_nginx:latest mediakraken/mknginx:latest
docker tag alpine_redis:latest mediakraken/mkredis:latest
docker tag alpine_webserver:latest mediakraken/mkwebserver:latest

# build the image/containers to run
docker-compose build xxxxx - xxxxx optional for image to build

