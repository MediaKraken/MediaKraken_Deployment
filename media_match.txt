Movie match flow:

subprogram_file_scan.py
	find all media
	create dl "Z" record
		{"Path": "/home/metaman/nfsmount/ZZ_Test/Movies/Donnie Darko (2001)/Donnie Darko (2001).mkv", "Status": null, "ClassID": "928c56c3-253d-4e30-924e-5698be6d3d39", "MediaID": "8e38c5d1-fcf4-43ab-93d6-09c9cbc59741", "MetaNewID": "7ffc7bc5-b9c7-4d22-86ee-08987dec796d", "ProviderMetaID": null}


main_server_metadata_api.py
	worker thread for each provider and "Z" records
	if not a "Z" record, process the provider function that's controlled by limiter
		if "Search"
		if "Fetch"
# TODO so, set tmdbid instead of imdb as default to save a call
# nvm, tmdbid is set first
			if imdb id - do call for flipping over to themoviedb id
			else - fetch data
				set to fetchcastcrew
		if "FetchCastCrew"
			fetch and save cast/crew
			set to fetch review
		if "FetchReview"
			fetch and save review
			delete dl que record		

	if "Z" record:
	metadata_uuid = metadata_identification.metadata_identification
		metadata_uuid = metadata_movie.metadata_movie_lookup (in ident)
			check for dupe name/year
			metadata_uuid, imdb_id, tmdb_id, rt_id = metadata_nfo_xml.nfo_xml_db_lookup
			if metadata_uuid is None
				if last provider id's return last metaid
			metadata_uuid = db_connection.db_find_metadata_guid - lookup local db by name/year
			if not found
				if provider id's
					setup FETCH dl with provider id
				else
					setup SEARCH dl
				update provider to themoviedb
	if metadata_uuid not none
		set metadataid on the media - db_update_media_id
