version: 1.0.{build}
environment:
  FF_BUILD_DIR: C:\ff_build
  FFMPEG_VERSION: 2.8.4
  SDL_VERSION: 2.0.4
  SDL_MIXER_VERSION: 2.0.1
  USE_SDL2_MIXER: 1
  access_token:
    secure: H8F1UMqC4QixM9NbnHewuineXTu860e3WhkpgMzui6xQmCv2qyXd4BDonVrrW5Iv
  matrix:
  - PYVER: 27
    BITTNESS: 32
  - PYVER: 34
    BITTNESS: 32
  - PYVER: 27
    BITTNESS: 64
  - PYVER: 34
    BITTNESS: 64
build_script:
- ps: >-
    iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/matham/packaging/master/check_error.ps1'))


    $old_pypath = $env:PYTHONPATH

    $env:PYTHONPATH = "$env:APPVEYOR_BUILD_FOLDER;$env:PYTHONPATH"


    if ($env:BITTNESS -eq "64") {
      $PYTHON_ROOT = "C:\Python$env:PYVER-x64"
    } else {
      $PYTHON_ROOT = "C:\Python$env:PYVER"
    }

    $env:PATH = "$PYTHON_ROOT;$PYTHON_ROOT\Scripts;$env:PATH;C:\Program Files\7-Zip"

    python -c "import sys;print('Python version is {}'.format(sys.version))"

    Check-Error


    mkdir "$env:FF_BUILD_DIR"

    Check-Error

    cd "$env:FF_BUILD_DIR"

    echo "http://ffmpeg.zeranoe.com/builds/win$env:BITTNESS/shared/ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-shared.7z"

    Invoke-WebRequest "http://ffmpeg.zeranoe.com/builds/win$env:BITTNESS/shared/ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-shared.7z" -OutFile "shared.7z"

    Check-Error

    Invoke-WebRequest "http://ffmpeg.zeranoe.com/builds/win$env:BITTNESS/dev/ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-dev.7z" -OutFile "dev.7z"

    Check-Error


    7z x "shared.7z"

    Check-Error

    ren "ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-shared" "ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-dev"

    Check-Error


    7z x "dev.7z" -y

    Check-Error

    ren "ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-dev" ffmpeg

    Check-Error


    Invoke-WebRequest "https://www.libsdl.org/release/SDL2-devel-$env:SDL_VERSION-mingw.tar.gz" -OutFile "SDL2-devel-$env:SDL_VERSION-mingw.tar.gz"

    Check-Error

    7z x "SDL2-devel-$env:SDL_VERSION-mingw.tar.gz"

    Check-Error

    7z x "SDL2-devel-$env:SDL_VERSION-mingw.tar"

    Check-Error


    Invoke-WebRequest "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-$env:SDL_MIXER_VERSION-mingw.tar.gz" -OutFile "SDL2_mixer-devel-$env:SDL_MIXER_VERSION-mingw.tar.gz"

    Check-Error

    7z x "SDL2_mixer-devel-$env:SDL_MIXER_VERSION-mingw.tar.gz"

    Check-Error

    7z x "SDL2_mixer-devel-$env:SDL_MIXER_VERSION-mingw.tar"

    Check-Error


    if ($env:BITTNESS -eq "64") {
      Copy-Item "SDL2-$env:SDL_VERSION\COPYING.txt" -destination "SDL2-$env:SDL_VERSION\x86_64-w64-mingw32\bin"
      Copy-Item "SDL2-$env:SDL_VERSION\README-SDL.txt" -destination "SDL2-$env:SDL_VERSION\x86_64-w64-mingw32\bin"
      Copy-Item "SDL2_mixer-$env:SDL_MIXER_VERSION\x86_64-w64-mingw32\*" -destination "SDL2-$env:SDL_VERSION\x86_64-w64-mingw32\" -Recurse -Force

      $env:SDL_ROOT="$env:FF_BUILD_DIR\SDL2-$env:SDL_VERSION\x86_64-w64-mingw32"
    } else {
      Copy-Item "SDL2-$env:SDL_VERSION\COPYING.txt" -destination "SDL2-$env:SDL_VERSION\i686-w64-mingw32\bin"
      Copy-Item "SDL2-$env:SDL_VERSION\README-SDL.txt" -destination "SDL2-$env:SDL_VERSION\i686-w64-mingw32\bin"
      Copy-Item "SDL2_mixer-$env:SDL_MIXER_VERSION\i686-w64-mingw32\*" -destination "SDL2-$env:SDL_VERSION\i686-w64-mingw32\" -Recurse -Force

      $env:SDL_ROOT="$env:FF_BUILD_DIR\SDL2-$env:SDL_VERSION\i686-w64-mingw32"
    }


    $env:FFMPEG_ROOT="$env:FF_BUILD_DIR\ffmpeg"

    cd "$env:APPVEYOR_BUILD_FOLDER"


    python -c "with open(r'$PYTHON_ROOT\Lib\distutils\distutils.cfg', 'wb') as fh: fh.write(b'[build]\ncompiler = mingw32\n')"

    Check-Error

    python -m pip install pip wheel setuptools --upgrade

    Check-Error

    pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy

    Check-Error

    pip install cython nose

    Check-Error


    mkdir deploy

    python setup.py bdist_wheel -d "deploy"

    Check-Error

    if ($env:BITTNESS -eq "64" -and $env:PYVER -eq "34") {
      python setup.py sdist -d "deploy"
      Check-Error
    }


    $env:PYTHONPATH = $old_pypath
test_script:
- ps: >-
    iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/matham/packaging/master/check_error.ps1'))


    cd "$env:APPVEYOR_BUILD_FOLDER\deploy"

    $name = python -c "import glob;print(glob.glob('*.whl')[0])"

    Check-Error

    echo $name

    python -m wheel install "$name"

    Check-Error


    $env:FFPYPLAYER_TEST_DIRS = "$env:APPVEYOR_BUILD_FOLDER\ffpyplayer\tests;$env:APPVEYOR_BUILD_FOLDER\examples"

    $name = python -c "import ffpyplayer, os.path;print(os.path.dirname(ffpyplayer.__file__))"

    Check-Error

    echo $name

    python -m nose.core "$name\tests"

    Check-Error
artifacts:
- path: deploy\*
  name: wheels
on_success:
- ps: >-
    if ($env:BITTNESS -eq "64" -and $env:PYVER -eq "34") {
        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/matham/packaging/master/cpl_appveyor_gh_docs.ps1'))
    }
