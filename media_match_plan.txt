Media match flow:

subprogram_file_scan.py (0.1.9 done)
	thread out each media dir for scanning below
	finds all media from each media dir (via file extention - include subtitles)
	check to see if in global known media (ie, on local db)
	if not in known media
		if game iso/chd - set new media class
		if trailer/theme/etc - set new media class
		save media to db
		if part 1 of "stacked" media or standalone media file
			create DL "Z" record for each media file
				{"Path": "/home/metaman/nfsmount/ZZ_Test/Movies/Donnie Darko (2001)/Donnie Darko (2001).mkv",
				"Status": null, "ClassID": "928c56c3-253d-4e30-924e-5698be6d3d39",
				"MediaID": "8e38c5d1-fcf4-43ab-93d6-09c9cbc59741",
				"MetaNewID": "7ffc7bc5-b9c7-4d22-86ee-08987dec796d", "ProviderMetaID": null}
	if in known media - go along merry way to next file in dir


main_server_metadata_api.py
	worker thread for each provider and "Z" records (0.1.8)
	if "Z" record (0.1.8)
		if name/year is equal last, use last metadata_uuid used (0.1.8)
			delete DL record as then there is a previous rec that should be doing fetch/etc or was in DB already (0.1.8)
		start search by calling - metadata_uuid = metadata_identification.metadata_identification (0.1.8)
		in provider code, if name/year is equal last, use last metadata_uuid used - again since in thread so all shows could be in a row (0.1.8)
			delete DL record as then there is a previous rec that should be doing fetch/etc or was in DB already (0.1.8)
		grab provider id's from nfo/xml (0.1.8)
		if provider ids are found in nfo/xml (0.1.8)
			if provider ids found = last provider ids found, delete DL record and return last metadata_uuid (0.1.8)
			check provider ids against local db (0.1.8)
			if found, set id from db to media and delete DL record (0.1.8)
			if not found
				if FETCH+ already exists
					use that records metadata_uuid and delete DL record)
				else:
					set id to DL record and set FETCH
		if providers ids are NOT found in nfo/xml then do a local db lookup via name/year (0.1.8)
			if found, use matched metadata_uuid and delete DL record (0.1.8)
			not found, set SEARCH DL record to primary provider for class type (0.1.8)
		store used ids/meta/title/year/etc (0.1.8)
	if "provider" record (0.1.8)
		if SEARCH (0.1.8)
			do provider api call by name/year (0.1.8)
			if not found set next provider for class type (0.1.8)
			if ids found via provider api call (0.1.8)
				check local db for metadata match via provider id returned (0.1.8)
					if yes, set metadata id from local record and delete DL record (0.1.8)
					if no, set metadata id from DL record, set DL record to FETCH for match from api call (0.1.8)
						if FETCH+ already exists
							use that records metadata_uuid and delete DL record)
						else:
							set id to DL record and set FETCH
		if FETCH (0.1.8)
			download/save metatdata info (0.1.8)
			set dl record to FETCHCASTCREW (0.1.8)
		if FETCHCASTCREW (0.1.8)
			fetch/save cast/crew data (0.1.8)
			set dl record to FETCHREVIEW (0.1.8)
		if FETCHREVIEW (0.1.8)
			fetch/save review data (0.1.8)
			delete DL record as it's the last stage (0.1.8)

*********
Testing:
Blade Runner			xml
	srt file....search - since nfo/xml check doesn't drop the lang
Das Boot			xml
	mkv........search - since nfo/xml check isn't dropping -cd1/2 etc
Donnie Darko			xml
	mkv......fetch as tt in nfo/xml
Identity			---
	mkv......search as no nfo/xml
King Arthur			xml
	srt file.....search - since nfo/xml check doesn't drop the lang
MD Geist			xml
	srt file....search - since nfo/xml check doesn't drop the lang
Snow White and the Huntsman	nfo
	mkv......fetch....from nfo file
The Professional		xml
	mkv........fetch...from xml

subprogram_file_scan.py
	added 30 rows to media
	added 30 rows to download que (all Z records and Status: null)

main_server_metadata_api.py
	

**********************

subprogram_file_scan.py
	added 30 rows to media
	added 30 rows to download que (all Z records and Status: null)

main_server_metadata_api.py
	four run mm_metadata_json is being wiped out!!!!!!!!!!!! - fixed

**********************
testing run

subprogram_file_scan.py (0.1.10)
	added 29 rows to media
	added 29 rows to download que (all Z records and Status: null)
	one is skipped as it's part2 of a file


***********************  below is 0.1.10 design

subprogram_file_scan.py
	thread out each media dir for scanning below
	finds all media from each media dir (via file extention - include subtitles)
		if dir update date < last scan date skip dir
	if not in known media (ie....local db)
		if game iso/chd - set new media class
		if trailer/theme/etc - set new media class
		if audio/video/etc file
			ffprobe the media stats
		if part 1 of "stacked" media or standalone media file
			create DLQ "Z" record for each media file
				{"Path": "/home/metaman/nfsmount/ZZ_Test/Movies/Donnie Darko (2001)/Donnie Darko (2001).mkv",
				"Status": null, "ClassID": "928c56c3-253d-4e30-924e-5698be6d3d39",
				"MediaID": "8e38c5d1-fcf4-43ab-93d6-09c9cbc59741",
				"MetaNewID": "7ffc7bc5-b9c7-4d22-86ee-08987dec796d", "ProviderMetaID": null}
		save media and ffprobe json to db
	if in known media - go along merry way to next file found in lib dir


main_server_metadata_api.py
	worker thread for each provider and "Z" records
	# these Z records are the initial records saying you need to match against a media file
	if "Z" record
		if name/year is equal last
			use last metadata_uuid used
			delete DLQ record as then there is a previous rec that should be doing fetch/etc or was in DB already
		start search by calling - metadata_uuid = metadata_identification.metadata_identification
		in ident code by media type, if name/year is equal last
			use last metadata_uuid used - again since in thread so all shows could be in a row
			delete DLQ record as then there is a previous rec that should be doing fetch/etc or was in DB already
		grab provider id's from nfo/xml
		if provider ids are found in nfo/xml
			if provider ids = last provider ids found
				delete DL record
				return last metadata_uuid
			if provider ids in local db
				set id from db to media and delete DL record
			if not found in local db
				if FETCH+ already exists
					use that records metadata_uuid and delete DL record
				else:
					set id to DLQ record and set FETCH
		if providers ids are NOT found in nfo/xml
			then do a local db lookup via name/year
			if found
				use matched metadata_uuid
				delete DLQ record 
			not found
				set SEARCH DLQ record to primary provider for class type 
		store used ids/meta/title/year/etc for last ids used
	# after initial 
	if "provider" record 
		if SEARCH 
			do provider api call by name/year 
			if not found set next provider for class type
			if ids found via provider api call
				check local db for metadata match via provider id returned 
					if yes, set metadata id from local record and delete DL record 
					if no, set metadata id from DL record
						set DL record to FETCH for match from api call 
						if FETCH+ already exists
							use that records metadata_uuid and delete DL record)
						else:
							set id to DLQ record and set FETCH
		if FETCH
			download/save metatdata info
			set dlq record to FETCHCASTCREW
		if FETCHCASTCREW 
			fetch/save cast/crew data 
			set dlq record to FETCHREVIEW 
		if FETCHREVIEW
			fetch/save review data 
			delete DLQ record as it's the last stage
