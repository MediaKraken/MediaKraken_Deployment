Media match flow:

subprogram_file_scan.py (0.1.8 done)
	finds all media from media dir's
	create DL "Z" record for each media file
		{"Path": "/home/metaman/nfsmount/ZZ_Test/Movies/Donnie Darko (2001)/Donnie Darko (2001).mkv",
		"Status": null, "ClassID": "928c56c3-253d-4e30-924e-5698be6d3d39", "MediaID": "8e38c5d1-fcf4-43ab-93d6-09c9cbc59741",
		"MetaNewID": "7ffc7bc5-b9c7-4d22-86ee-08987dec796d", "ProviderMetaID": null}


main_server_metadata_api.py
	worker thread for each provider and "Z" records (0.1.8)
	if "Z" record (0.1.8)
		if name/year is equal last, use last metadata_uuid used (0.1.8)
			delete DL record as then there is a previous rec that should be doing fetch/etc or was in DB already (0.1.8)
		start search by calling - metadata_uuid = metadata_identification.metadata_identification (0.1.8)
		in provider code, if name/year is equal last, use last metadata_uuid used - again since in thread so all shows could be in a row (0.1.8)
			delete DL record as then there is a previous rec that should be doing fetch/etc or was in DB already (0.1.8)
		grab provider id's from nfo/xml (0.1.8)
		if ids are found in nfo/xml (0.1.8)
			if ids found = last ids found, return last metadata_uuid (0.1.8)
			check ids against local db (0.1.8)
			if found, set id from db to media and delete DL record (0.1.8)
			if not found, set id to DL record and set FETCH (0.1.8)
				(FETCH only if FETCH doesn't already exist) (0.1.8)
				(if FETCH already exists, use that recoreds metadata_uuid and delete DL record) (0.1.8)
		if ids are NOT found in nfo/xml then do a local db lookup via name/year (0.1.8)
			if found, use matched metadata_uuid and delete DL record (0.1.8)
			not found, set SEARCH DL record to primary provider for class type (0.1.8)
		set last used ids/meta/title/year/etc (0.1.8)
	if "provider" record (0.1.8)
		if SEARCH (0.1.8)
			do provider api call by name/year (0.1.8)
			if not found set next provider for class type (0.1.8)
			if ids found via provider api call (0.1.8)
				check local db for metadata match (0.1.8)
					if yes, set metadata id from local record and delete DL record (0.1.8)
					if no, set DL record to FETCH for match from api call (0.1.8)
						(FETCH only if FETCH doesn't already exist) (0.1.8)
						(if FETCH already exists, use that recoreds metadata_uuid and delete DL record) (0.1.8)
		if FETCH (0.1.8)
			download/save metatdata info (0.1.8)
			set dl record to FETCHCASTCREW (0.1.8)
		if FETCHCASTCREW (0.1.8)
			fetch/save cast/crew data (0.1.8)
			set dl record to FETCHREVIEW (0.1.8)
		if FETCHREVIEW (0.1.8)
			fetch/save review data (0.1.8)
			delete DL record as it's the last stage (0.1.8)

*********
Testing:
Blade Runner			xml
	srt file....search - since nfo/xml check doesn't drop the lang
Das Boot			xml
	mkv........search - since nfo/xml check isn't dropping -cd1/2 etc
Donnie Darko			xml
	mkv......fetch as tt in nfo/xml
Identity			---
	mkv......search as no nfo/xml
King Arthur			xml
	srt file.....search - since nfo/xml check doesn't drop the lang
MD Geist			xml
	srt file....search - since nfo/xml check doesn't drop the lang
Snow White and the Huntsman	nfo
	mkv......fetch....from nfo file
The Professional		xml
	mkv........fetch...from xml

subprogram_file_scan.py
	added 30 rows to media
	added 30 rows to download que (all Z records and Status: null)

main_server_metadata_api.py
	

**********************

subprogram_file_scan.py
	added 30 rows to media
	added 30 rows to download que (all Z records and Status: null)

main_server_metadata_api.py


