version: '3'

services:
  reverse-proxy:
    image: th-registry-1.beaverbay.local:5000/mediakraken/mktraefik:dev
    command: --api --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # So that Traefik can listen to the Docker events

  whoami:
    image: containous/whoami # A container that exposes an API to show its IP address
    labels:
      - "traefik.frontend.rule=Host:whoami.docker.localhost"

  # pgbouncer
  pgbouncer:
    image: th-registry-1.beaverbay.local:5000/mediakraken/mkpgbouncer:dev
    environment:
      - DB_HOST=mkdatabase
      - DB_USER=${DBUSER}
      - DB_PASSWORD=${DBPASS}
      - POOL_MODE=session
      - MAX_CLIENT_CONN=1024
      - DEFAULT_POOL_SIZE=85
      - SERVER_RESET_QUERY=DISCARD ALL
    container_name: mkpgbouncer
    depends_on:
      - database
    entrypoint: ./wait-for-it-ash.sh -h database -p 5432 -t 30 -- ./entrypoint.sh
    stop_grace_period: 30s
    stop_signal: SIGTERM
    networks:
      - mediakraken_network
    restart: unless-stopped
    labels:
      - "traefik.frontend.rule=Host:pgbouncer.docker.localhost"

  # Postgresql server
  database:
    image: th-registry-1.beaverbay.local:5000/mediakraken/mkdatabase:dev
    environment:
      - MAX_CONNECTIONS=20
      - MAX_WAL_SENDERS=10
      - POSTGRES_DB=${DBDATABASE}
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASS}
    container_name: mkdatabase
    stop_grace_period: 30s
    stop_signal: SIGTERM
    volumes:
      - mediakraken_vol_postgresql:/var/lib/postgresql
    networks:
      - mediakraken_network
    restart: unless-stopped