server {
    listen 5000;
#    include site-name.conf;

    access_log  /config/log/nginx/001-musicbrainz.access.log;
    access_log  /config/log/nginx/001-musicbrainz.proxy.log proxylog;
    error_log   /config/log/nginx/001-musicbrainz.error.log notice;

    location /static/ {
        root /app/musicbrainz/root;
        expires 24h;
        gzip  on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        # make sure gzip does not lose large gzipped js or css files
        # see http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl
        gzip_buffers 16 8k;
    }

    location ~* /static/build/ {
        root /app/musicbrainz/root;
        expires max;
        gzip  on;
        gzip_static on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        # make sure gzip does not lose large gzipped js or css files
        # see http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl
        gzip_buffers 16 8k;

        charset utf-8;
    }

    location = /favicon.ico {
        root /app/musicbrainz/root;
        expires 7d;
    }

    location = /robots.txt {
        root /app/musicbrainz/root;
        default_type text/plain;
        # on production, "ln -s root/robots.txt.production root/robots.txt"
        try_files $uri $uri.staging
        expires 1h;
    }

    location / {
        set $script "";
        set $path_info $uri;

        fastcgi_pass 127.0.0.1:55901;

        fastcgi_param  HTTPS            $http_x_mb_https;
        fastcgi_param  SCRIPT_NAME      $script;
        fastcgi_param  PATH_INFO        $path_info;
        fastcgi_param  QUERY_STRING     $query_string;
        fastcgi_param  REQUEST_METHOD   $request_method;
        fastcgi_param  CONTENT_TYPE     $content_type;
        fastcgi_param  CONTENT_LENGTH   $content_length;
        fastcgi_param  REQUEST_URI      $request_uri;
        fastcgi_param  SERVER_PROTOCOL  $server_protocol;
        fastcgi_param  REMOTE_ADDR      $remote_addr;
        fastcgi_param  REMOTE_PORT      $remote_port;
        fastcgi_param  SERVER_ADDR      $server_addr;
        fastcgi_param  SERVER_PORT      $server_port;
        fastcgi_param  SERVER_NAME      $server_name;


        # In production, this might be found from X-MB-Remote-Addr, depending
        # on if we have >1 layer of proxies
        fastcgi_param  REMOTE_ADDR        $http_x_mb_remote_addr;
        fastcgi_param  REMOTE_PORT        $remote_port;
        fastcgi_param  SERVER_ADDR        $server_addr;
        fastcgi_param  SERVER_PORT        $server_port;
        fastcgi_param  SERVER_NAME        $server_name;

        gzip  on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        # make sure gzip does not lose large gzipped js or css files
        # see http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl
        gzip_buffers 16 8k;
    }

    location ~* ^/internal/search/(.*?)/(.*) {
        internal;

        # Extract url from the request
        set $search_uri $2;
        set $search_host $1;

        # Compose url
        set $search_url http://$search_host/$search_uri?$args;

        proxy_pass $search_url;

        add_header Access-Control-Allow-Origin * always;
    }

    include /defaults/mbserver-rewrites.conf;
}
