#uwsgi_cache_path /var/servercache levels=1:2 keys_zone=mkcache:16m inactive=60m;

upstream backends {
    server mkstack_webapp:8080;
}

server {
    listen         80;
    server_tokens  off;
    return 301 https://$host$request_uri;
}

server {
    listen      8900 ssl http2;
    server_name localhost;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate ./certs/cacert.pem;
    ssl_certificate_key ./certs/privkey.pem;
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    charset     utf-8;
    client_max_body_size 32M;

    access_log off;
    # access_log /var/log/mediakraken/nginx/mediakraken.net_access.log;

    # enable zip compression to browsers
    gzip on;
    gzip_vary on;
    gzip_types
        text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml
        image/svg+xml text/javascript application/javascript application/x-javascript
        text/x-json application/json application/x-web-app-manifest+json text/css text/plain
        text/x-component font/opentype application/x-font-ttf application/vnd.ms-fontobject
        image/x-icon;
    gzip_proxied    no-cache no-store private expired auth;
    gzip_min_length 1024;
    gunzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_buffers 16 8k;
    server_tokens  off;

    # to disable content-type sniffing on some browsers.
    add_header X-Content-Type-Options nosniff;

    # Enables the Cross-site scripting (XSS) filter
    add_header X-XSS-Protection "1; mode=block";

    # caches file metadata
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    #root /mediakraken/web_app/MediaKraken/static;
    # Configure NGINX to deliver static content from the specified folder
    location /static {
        sendfile           on;
        sendfile_max_chunk 1m;
        alias /mediakraken/web_app/MediaKraken/static/;
    }
# Can't use this as the container/etc should be on different nodes with swarm
#    location / {
#        uwsgi_pass unix:///path/to/django_site.sock;
#        include /etc/nginx/uwsgi_params;
#        #client cache
#        expires 5m; #Or whatever value you want
#        #server cache
#        uwsgi_cache mkcache;
#        uwsgi_cache_key $uri;
#        uwsgi_cache_valid any 1h; #Or whatever value you want
#    }
    # set location to use backends
    # only use http since it's all in the docker network
    location / {
      proxy_pass http://backends;
      proxy_set_header Host $host:8900;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_redirect off;
      proxy_http_version 1.1;
    }
}
