version: '2'
# MediaKraken

services:
  # Main app server which controls the show and transcodes
  appserver:
    build:
      context: ./ComposeMediaKrakenServer
      dockerfile: dockerfile-appserver
    ports:
      - "8903:5000"
    volumes:
      - ./log:/var/log/mediakraken
    networks:
      - mediakraken-network
      - mediakraken-dbnetwork

  # slave app server which transcodes
  appslave:
    build:
      context: ./ComposeMediaKrakenSlave
      dockerfile: dockerfile-appslave
    volumes:
      - ./log:/var/log/mediakraken
    networks:
      - mediakraken-network

  # Postgresql server
  database:
    build:
      context: ./ComposeMediaKrakenDatabase
      dockerfile: dockerfile-database
    environment:
      - POSTGRES_PASSWORD=jf20CHANGEME49jf42j
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql
    networks:
      - mediakraken-dbnetwork

  # Runs the webapi for 3rd party clients
  webapi:
    build:
      context: ./ComposeMediaKrakenWebAPI
      dockerfile: dockerfile-webapi
    ports:
      - "8901:8080"
    volumes:
      - ./log:/var/log/mediakraken
    networks:
      - mediakraken-dbnetwork

  # Runs the web service for the main server application
  webserver:
    build:
      context: ./ComposeMediaKrakenWebServer
      dockerfile: dockerfile-webserver
    ports:
      - "8900:8080"
    volumes:
      - ./log:/var/log/mediakraken
    networks:
      - mediakraken-dbnetwork

# Docker private networks
networks:
  # Twisted communications network
  mediakraken-network:
    driver: overlay
  # Database communications network
  mediakraken-dbnetwork:
    driver: overlay
