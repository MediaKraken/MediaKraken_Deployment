version: '2'
# MediaKraken

services:
  # Main app server which controls the show and transcodes
  appserver:
    build:
      context: ./ComposeMediaKrakenServer
      dockerfile: dockerfile-appserver
    container_name: mkserver
    depends_on:
      - database
    ports:
      - "8903:5000"
    volumes:
      - ./log:/var/log/mediakraken
    networks:
      - mediakraken-network
      - mediakraken-dbnetwork

  # slave app server which transcodes
#  appslave:
#    build:
#      context: ./ComposeMediaKrakenSlave
#      dockerfile: dockerfile-appslave
#    container_name: mkslave
#    depends_on:
#      - database
#    volumes:
#      - ./log:/var/log/mediakraken
#    networks:
#      - mediakraken-network

  # Postgresql server
  database:
    build:
      context: ./ComposeMediaKrakenDatabase
      dockerfile: dockerfile-database
    environment:
      - POSTGRES_DB=metamandb
      - POSTGRES_USER=metamanpg
      - POSTGRES_PASSWORD=jf20CHANGEME49jf42j
    container_name: mkdatabase
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql
    networks:
      - mediakraken-dbnetwork

  # Runs the webapi for 3rd party clients
#  webapi:
#    build:
#      context: ./ComposeMediaKrakenWebAPI
#      dockerfile: dockerfile-webapi
#    container_name: mkwebapi
#    depends_on:
#      - database
#    ports:
#      - "8901:8080"
#    volumes:
#      - ./log:/var/log/mediakraken
#    networks:
#      - mediakraken-dbnetwork

  # Runs the web service for the main server application
  webserver:
    build:
      context: ./ComposeMediaKrakenWebServer
      dockerfile: dockerfile-webserver
    container_name: mkwebapp
    depends_on:
      - database
    ports:
      - "8900:8080"
    volumes:
      - ./log:/var/log/mediakraken
    networks:
      - mediakraken-dbnetwork

# Docker private networks
networks:
  # Twisted communications network
  mediakraken-network:
    driver: bridge
  # Database communications network
  mediakraken-dbnetwork:
    driver: bridge
