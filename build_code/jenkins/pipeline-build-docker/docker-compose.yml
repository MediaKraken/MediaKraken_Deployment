version: '2'
# MediaKraken

# Volumes are HOST directory and then CONTAINER directory

services:
  # Main app server which controls the show and transcodes
  appserver:
    build:
      context: ./alpine/ComposeMediaKrakenServer
      dockerfile: dockerfile-appserver
    environment:
      - POSTGRES_PASSWORD=${DBPASS}
    container_name: mkserver
    depends_on:
      - database
    entrypoint: ./wait-for-it.sh -h database -p 5432 -t 30 -- python main_server.py
    ports:
      - "8903:5000"
    volumes:
      - /var/log/mediakraken:/mediakraken/log
    networks:
      - mediakraken-network
      - mediakraken-dbnetwork

  # slave app server which transcodes
#  appslave:
#    build:
#      context: ./alpine/ComposeMediaKrakenSlave
#      dockerfile: dockerfile-appslave
#    environment:
#      - POSTGRES_PASSWORD=${DBPASS}
#    container_name: mkslave
#    depends_on:
#      - database
#    entrypoint: ./wait-for-it.sh -h database -p 5432 -t 30
#    volumes:
#      - /var/log/mediakraken:/mediakraken/log
#    networks:
#      - mediakraken-network

  # Postgresql server
  database:
    build:
      context: ./alpine/ComposeMediaKrakenDatabase
      dockerfile: dockerfile-database
    environment:
      - POSTGRES_DB=metamandb
      - POSTGRES_USER=metamanpg
      - POSTGRES_PASSWORD=${DBPASS}
    container_name: mkdatabase
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql
    networks:
      - mediakraken-dbnetwork

  # Runs the webapi for 3rd party clients
#  webapi:
#    build:
#      context: ./alpine/ComposeMediaKrakenWebAPI
#      dockerfile: dockerfile-webapi
#    environment:
#      - POSTGRES_PASSWORD=${DBPASS}
#    container_name: mkwebapi
#    depends_on:
#      - database
#    entrypoint: ./wait-for-it.sh -h database -p 5432 -t 30
#    ports:
#      - "8901:8080"
#    volumes:
#      - /var/log/mediakraken:/mediakraken/log
#    networks:
#      - mediakraken-dbnetwork

  # Runs the web service for the main server application
  webserver:
    build:
      context: ./alpine/ComposeMediaKrakenWebServer
      dockerfile: dockerfile-webserver
    environment:
      - POSTGRES_PASSWORD=${DBPASS}
    container_name: mkwebapp
    depends_on:
      - database
    entrypoint: ./wait-for-it.sh -h database -p 5432 -t 30 -- uwsgi --socket 0.0.0.0:8080 --protocol http --chdir=./web_app --ini ./web_app/mediakraken_uwsgi_alpine.ini
    ports:
      - "8900:8080"
    volumes:
      - /var/log/mediakraken:/mediakraken/log
    networks:
      - mediakraken-dbnetwork

# Docker private networks
networks:
  # Twisted communications network
  mediakraken-network:
    driver: bridge
  # Database communications network
  mediakraken-dbnetwork:
    driver: bridge
